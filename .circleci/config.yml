version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run: echo "$CONDUIT_SECRET $FLASK_APP $FLASK_DEBUG"
      - run:
          name: install pyth dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements/dev.txt
      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements/dev.txt" }}
  initialise:
    docker:
      - image: circleci/python:3.7.4
        environment:
          DATABASE_URL: postgresql://myuser:somePwd@localhost:5432/myuser
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_DB: myuser
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: somePwd
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "requirements/dev.txt" }}
            - v2-dependencies-
      - run:
          name: flask upgrade
          command: |
            . venv/bin/activate
            sleep 1
            flask db upgrade
            export CONDUIT_SECRET='something-really-secret'
            export FLASK_APP=autoapp.py
            export FLASK_DEBUG=1
            export FLASK_ENV=development
            flask run
      - run:
          name: flask test
          command: |
            . venv/bin/activate
            sleep 1
            flask test

workflows:
  version: 2
  build_circleci:
    jobs:
      - build
      - initialise:
          requires:
            - build

